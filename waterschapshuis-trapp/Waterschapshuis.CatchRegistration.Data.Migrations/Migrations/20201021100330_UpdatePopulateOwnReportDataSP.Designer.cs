// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Waterschapshuis.CatchRegistration.Infrastructure.Data.EntityFramework;

namespace Waterschapshuis.CatchRegistration.Data.Migrations.Migrations
{
    [DbContext(typeof(CatchRegistrationDbContext))]
    [Migration("20201021100330_UpdatePopulateOwnReportDataSP")]
    partial class UpdatePopulateOwnReportDataSP
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.CatchArea", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Geometry>("Geometry")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("RayonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RayonId");

                    b.ToTable("CatchArea");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.HourSquare", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Geometry>("Geometry")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("HourSquare");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Geometry>("Geometry")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.Province", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Geometry>("Geometry")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.Rayon", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Geometry>("Geometry")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Rayon");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.SubArea", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CatchAreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Geometry>("Geometry")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<Guid>("WaterAuthorityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CatchAreaId");

                    b.HasIndex("WaterAuthorityId");

                    b.ToTable("SubArea");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.SubAreaHourSquare", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Ditch")
                        .HasColumnType("float");

                    b.Property<Geometry>("Geometry")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<Guid>("HourSquareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KmWaterway")
                        .HasColumnType("int");

                    b.Property<byte>("PercentageDitch")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("SubAreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("WetDitch")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("HourSquareId");

                    b.HasIndex("SubAreaId", "HourSquareId")
                        .IsUnique();

                    b.ToTable("SubAreaHourSquare");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.WaterAuthority", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeUvw")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<Geometry>("Geometry")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("WaterAuthority");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Catches.Catch", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CatchTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("RecordedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("TrapId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CatchTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("RecordedOn")
                        .HasName("IX_RecordedOn");

                    b.HasIndex("TrapId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Catch");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Catches.CatchType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("AnimalType")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsByCatch")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("Order")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("CatchType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4a5a1f2-a14d-9590-1d81-e29d858a1475"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "woelrat",
                            Order = (byte)1
                        },
                        new
                        {
                            Id = new Guid("30bd14ac-9fba-8858-55d6-5afa921916ed"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "bruine rat",
                            Order = (byte)2
                        },
                        new
                        {
                            Id = new Guid("a800c291-6104-a0f6-6bce-50f180d18cbe"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "bunzing",
                            Order = (byte)3
                        },
                        new
                        {
                            Id = new Guid("a2b00e4d-1360-4f79-0844-a19d41528b90"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "amerikaanse nerts",
                            Order = (byte)4
                        },
                        new
                        {
                            Id = new Guid("2a241941-61b6-2d0a-2d3f-6c09760ea2bd"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "hermelijn",
                            Order = (byte)5
                        },
                        new
                        {
                            Id = new Guid("eb989ecc-74d3-4642-48d7-00a512fe2304"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "zwarte rat",
                            Order = (byte)6
                        },
                        new
                        {
                            Id = new Guid("9d04c71c-251f-9ba3-98a6-871977f68055"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "wezel",
                            Order = (byte)7
                        },
                        new
                        {
                            Id = new Guid("82bb23be-6bab-45a5-83fc-ac1c81fa963f"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "bever",
                            Order = (byte)8
                        },
                        new
                        {
                            Id = new Guid("d4b917f0-50a6-1992-2c9a-db686c578fb3"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "fret",
                            Order = (byte)9
                        },
                        new
                        {
                            Id = new Guid("24873fd8-7b41-8a8b-7c81-621fde45520a"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "mol",
                            Order = (byte)10
                        },
                        new
                        {
                            Id = new Guid("2f61eb42-26b2-1e00-a70b-d0b4098d1d05"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "egel",
                            Order = (byte)11
                        },
                        new
                        {
                            Id = new Guid("7aba1245-13d7-0317-8307-4009eb3b51bf"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "konijn",
                            Order = (byte)12
                        },
                        new
                        {
                            Id = new Guid("a7efd4df-703e-8abf-6767-f24760cb2c1d"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "haas",
                            Order = (byte)13
                        },
                        new
                        {
                            Id = new Guid("ca585bdf-495b-6ba2-62dc-a68d66202a6f"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "eekhoorn",
                            Order = (byte)14
                        },
                        new
                        {
                            Id = new Guid("e9b0b7e7-3d23-034f-9999-a7f9c4ad1cd5"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "steenmarter",
                            Order = (byte)15
                        },
                        new
                        {
                            Id = new Guid("5b2131fe-743d-2467-477a-b7afbf181e81"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "das",
                            Order = (byte)16
                        },
                        new
                        {
                            Id = new Guid("b2f24fb5-359d-2116-9520-5bd38a0522fe"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "vos",
                            Order = (byte)17
                        },
                        new
                        {
                            Id = new Guid("c1a5586a-5416-442e-a6d4-e8d001302c14"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "boommarter",
                            Order = (byte)18
                        },
                        new
                        {
                            Id = new Guid("50cc209c-9168-905c-391c-8641ec5a887a"),
                            AnimalType = (byte)1,
                            IsByCatch = true,
                            Name = "otter",
                            Order = (byte)19
                        },
                        new
                        {
                            Id = new Guid("053210c7-1491-0255-a36a-223fab8780bd"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "wilde eend",
                            Order = (byte)20
                        },
                        new
                        {
                            Id = new Guid("843d3051-8f82-1df3-6e73-bfba9cba15cf"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "aalscholver",
                            Order = (byte)21
                        },
                        new
                        {
                            Id = new Guid("e2406e40-63b0-8926-5f49-185513c03e90"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "waterhoen",
                            Order = (byte)22
                        },
                        new
                        {
                            Id = new Guid("52529727-0e5c-07c0-2f00-173f081834d2"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "meerkoet",
                            Order = (byte)23
                        },
                        new
                        {
                            Id = new Guid("386c68bb-76e0-5847-8717-e876399e0d61"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "grauwe gans",
                            Order = (byte)24
                        },
                        new
                        {
                            Id = new Guid("eb6d4c1d-333a-538f-4228-92151f6c11aa"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "fuut",
                            Order = (byte)25
                        },
                        new
                        {
                            Id = new Guid("b7691621-97fa-26f9-86bc-d2d537e92d59"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "dodaars",
                            Order = (byte)26
                        },
                        new
                        {
                            Id = new Guid("dfcf25f4-37b7-85af-0486-8cc7f76475a1"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "waterral",
                            Order = (byte)27
                        },
                        new
                        {
                            Id = new Guid("1fa69307-35cd-24e0-62cb-83d21e6f706d"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "blauwe reiger",
                            Order = (byte)28
                        },
                        new
                        {
                            Id = new Guid("49f3fa88-8c51-a558-667f-e79da80d7495"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "tamme eend",
                            Order = (byte)29
                        },
                        new
                        {
                            Id = new Guid("c0d3288c-24b4-57b4-30e7-9d37de42909e"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "zwarte kraai",
                            Order = (byte)30
                        },
                        new
                        {
                            Id = new Guid("79b23520-2380-49e2-1e23-b226971a579b"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "ekster",
                            Order = (byte)31
                        },
                        new
                        {
                            Id = new Guid("d1f172ce-15c8-88e8-92ec-3e8997f97374"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "vlaamse gaai",
                            Order = (byte)32
                        },
                        new
                        {
                            Id = new Guid("7b4e5dd0-696b-24e2-1f68-685500cf477c"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "mandarijneend",
                            Order = (byte)33
                        },
                        new
                        {
                            Id = new Guid("0e3644b2-04f1-0bdd-2fb2-d673416d944c"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "nonnetje",
                            Order = (byte)34
                        },
                        new
                        {
                            Id = new Guid("f7bacd7d-63dc-5efb-71da-556c77e54768"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "roek",
                            Order = (byte)35
                        },
                        new
                        {
                            Id = new Guid("0eff39db-3937-6a4b-4526-8472b88ca537"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "spreeuw",
                            Order = (byte)36
                        },
                        new
                        {
                            Id = new Guid("680c7557-4ad8-66b9-9c2d-1310b7d107cb"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "vink",
                            Order = (byte)37
                        },
                        new
                        {
                            Id = new Guid("50a63929-570a-614b-7635-aa5adfc39c80"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "wintertaling",
                            Order = (byte)38
                        },
                        new
                        {
                            Id = new Guid("4f6e48e1-8213-24ae-80ff-658183378727"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "zomertaling",
                            Order = (byte)39
                        },
                        new
                        {
                            Id = new Guid("0f44982f-5f41-517a-8eac-38ea36541345"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "blauwborst",
                            Order = (byte)40
                        },
                        new
                        {
                            Id = new Guid("2e8a45e5-90ef-3da9-1657-9485a719762a"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "merel",
                            Order = (byte)41
                        },
                        new
                        {
                            Id = new Guid("0691a0c0-11ed-0cd0-81da-0a962bc13352"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "meeuw",
                            Order = (byte)42
                        },
                        new
                        {
                            Id = new Guid("5dfac5da-54ea-3b6d-8390-745baaa97c1f"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "fazant",
                            Order = (byte)43
                        },
                        new
                        {
                            Id = new Guid("399eaf18-256a-0ae9-4f27-ead861d68f3a"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "kuifeend",
                            Order = (byte)44
                        },
                        new
                        {
                            Id = new Guid("651014a7-422d-5f82-75f6-12f816ac40ad"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "koperwiek",
                            Order = (byte)45
                        },
                        new
                        {
                            Id = new Guid("3a737d68-0316-8de4-a349-90aeeeb44186"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "roodborst",
                            Order = (byte)46
                        },
                        new
                        {
                            Id = new Guid("f251fde0-5a5c-7426-7a24-15c5976d0c9f"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "watersnip",
                            Order = (byte)47
                        },
                        new
                        {
                            Id = new Guid("c815bc1e-5fdf-3b4c-23bf-1a5ded45717a"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "zanglijster",
                            Order = (byte)48
                        },
                        new
                        {
                            Id = new Guid("41051a0f-3060-1036-50a8-797f0d246223"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "grote zaagbek",
                            Order = (byte)49
                        },
                        new
                        {
                            Id = new Guid("64a42c1a-7d1b-121d-9a04-927941d6457d"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "middelste zaagbek",
                            Order = (byte)50
                        },
                        new
                        {
                            Id = new Guid("63223bed-466f-75b8-4569-6d6b2a306204"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "slobeend",
                            Order = (byte)51
                        },
                        new
                        {
                            Id = new Guid("8c3de473-2e36-5f98-2bd8-7de7cc9424ed"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "porseleinhoen",
                            Order = (byte)52
                        },
                        new
                        {
                            Id = new Guid("570abd85-a4f2-2216-0218-bf2547d3a47c"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "holenduif",
                            Order = (byte)53
                        },
                        new
                        {
                            Id = new Guid("7f446720-5862-2800-89fe-f0c3b28d573d"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "kleine zilverreiger",
                            Order = (byte)54
                        },
                        new
                        {
                            Id = new Guid("5cd8f246-327f-4a4f-067c-e1573b2b7f94"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "tortelduif",
                            Order = (byte)55
                        },
                        new
                        {
                            Id = new Guid("d36f55c5-05a9-68ba-18ba-bea7fc3fa3b8"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "knobbelzwaan",
                            Order = (byte)56
                        },
                        new
                        {
                            Id = new Guid("615bb03e-5756-0e85-2bdc-41952fba4bab"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "nijlgans",
                            Order = (byte)57
                        },
                        new
                        {
                            Id = new Guid("75283ee9-5706-9a47-2c13-3aba63af2aae"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "rotgans",
                            Order = (byte)58
                        },
                        new
                        {
                            Id = new Guid("7de9739c-3b0b-80a4-25a2-25ced3895635"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "brandgans",
                            Order = (byte)59
                        },
                        new
                        {
                            Id = new Guid("08304be0-03d9-0419-9d95-7dda70bf117f"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "tamme (boeren) gans",
                            Order = (byte)60
                        },
                        new
                        {
                            Id = new Guid("448b7701-491f-9d9e-1d8f-399e9fc74ec2"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "roerdomp",
                            Order = (byte)61
                        },
                        new
                        {
                            Id = new Guid("4047a8c6-35a2-30ba-3f1a-51b479aa2bdd"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "kauw",
                            Order = (byte)62
                        },
                        new
                        {
                            Id = new Guid("cd343cbf-9f02-4955-340b-daf38c3c95fd"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "grutto",
                            Order = (byte)63
                        },
                        new
                        {
                            Id = new Guid("3f4f77f6-19f1-90c0-534c-223c58d164b5"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "zwaan",
                            Order = (byte)64
                        },
                        new
                        {
                            Id = new Guid("f6d9670b-4fcc-a0bd-00f3-43dafb6c5f3b"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "bruine kiekendief",
                            Order = (byte)65
                        },
                        new
                        {
                            Id = new Guid("59fb893b-9f4d-5f83-59e2-1748451739dc"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "tafeleend",
                            Order = (byte)66
                        },
                        new
                        {
                            Id = new Guid("8b563a94-516a-19db-4d96-3dfda633042b"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "zwarte zwaan",
                            Order = (byte)67
                        },
                        new
                        {
                            Id = new Guid("6bc3a885-66a0-8f35-1142-4d06703a4f46"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "smient",
                            Order = (byte)68
                        },
                        new
                        {
                            Id = new Guid("fe25db3d-2bf6-a7a6-6272-7b50468f1aa7"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "geoorde fuut",
                            Order = (byte)69
                        },
                        new
                        {
                            Id = new Guid("f296f546-13f4-2172-51dd-6394577831bc"),
                            AnimalType = (byte)2,
                            IsByCatch = true,
                            Name = "canadese gans",
                            Order = (byte)70
                        },
                        new
                        {
                            Id = new Guid("f863a895-35c3-6432-7f93-235ad27456f5"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "snoek",
                            Order = (byte)71
                        },
                        new
                        {
                            Id = new Guid("045164e9-6606-7c9a-8976-05c6f62a4c95"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "zeelt",
                            Order = (byte)72
                        },
                        new
                        {
                            Id = new Guid("7f11f101-04d3-4ec5-3924-a379686b5542"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "blankvoorn",
                            Order = (byte)73
                        },
                        new
                        {
                            Id = new Guid("67dd1253-a69f-8755-50ec-4a8e431089bc"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "voorn",
                            Order = (byte)74
                        },
                        new
                        {
                            Id = new Guid("b3142f85-881e-58d1-9550-1f8bc58a1d3e"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "ruisvoorn",
                            Order = (byte)75
                        },
                        new
                        {
                            Id = new Guid("fd1a6eea-28b5-8718-4c9f-df5822301e64"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "aal",
                            Order = (byte)76
                        },
                        new
                        {
                            Id = new Guid("6aa19e7f-74fe-42a8-3256-1ef358538c6f"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "brasem",
                            Order = (byte)77
                        },
                        new
                        {
                            Id = new Guid("7c16c5cd-93b9-315d-2096-d214301b5d30"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "baars",
                            Order = (byte)78
                        },
                        new
                        {
                            Id = new Guid("79ee016d-92c3-6f74-5e4d-0405346f92fa"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "kolblei",
                            Order = (byte)79
                        },
                        new
                        {
                            Id = new Guid("aa139422-996c-7970-3f81-cc52421f42db"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "grote modderkruiper",
                            Order = (byte)80
                        },
                        new
                        {
                            Id = new Guid("2094367b-41cf-0357-3985-37be1759918b"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "inheemse meerval",
                            Order = (byte)81
                        },
                        new
                        {
                            Id = new Guid("cb478141-a50f-0a25-2eee-de00eae81410"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "snoekbaars",
                            Order = (byte)82
                        },
                        new
                        {
                            Id = new Guid("3005e270-97ae-68ff-919a-99347b9d949f"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "karper",
                            Order = (byte)83
                        },
                        new
                        {
                            Id = new Guid("4b29436b-92ec-3a3f-105d-4f9c53b092d8"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "schol",
                            Order = (byte)84
                        },
                        new
                        {
                            Id = new Guid("fc3a6849-43ff-1750-1e6f-291eab227230"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "bot",
                            Order = (byte)85
                        },
                        new
                        {
                            Id = new Guid("fc5d5c74-34f1-1263-571f-170a1e6f483e"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "kwabaal",
                            Order = (byte)86
                        },
                        new
                        {
                            Id = new Guid("06d350b0-378c-8d23-3c7b-31ab92d65d39"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "pos",
                            Order = (byte)87
                        },
                        new
                        {
                            Id = new Guid("3fbc8687-644c-09b5-1f38-32b03f0c39e3"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "bruine amerikaanse",
                            Order = (byte)88
                        },
                        new
                        {
                            Id = new Guid("57faaf49-108b-78e9-6373-97a021c3062f"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "amer. hondsvis",
                            Order = (byte)89
                        },
                        new
                        {
                            Id = new Guid("1370ee41-7fca-a1d9-6b68-eca6cc076bc3"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "bittervoorn",
                            Order = (byte)90
                        },
                        new
                        {
                            Id = new Guid("8b124eb4-8c67-91e4-55cd-95cf3e406937"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "kopvoorn",
                            Order = (byte)91
                        },
                        new
                        {
                            Id = new Guid("37ceec1c-7a34-7927-5932-b03448247b44"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "spiegelkarper",
                            Order = (byte)92
                        },
                        new
                        {
                            Id = new Guid("ae71b03c-0f45-010b-2966-e860104c698e"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "graskarper",
                            Order = (byte)93
                        },
                        new
                        {
                            Id = new Guid("bdd0ccf0-4ef4-4e18-6f0e-3db98690a6dd"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "zilverkarper",
                            Order = (byte)94
                        },
                        new
                        {
                            Id = new Guid("bdbf0caa-64b5-64cb-87b1-a489c6598af3"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "kroeskarper",
                            Order = (byte)95
                        },
                        new
                        {
                            Id = new Guid("5c71eaae-3a9e-3276-7e35-1dec90b19ab4"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "kleine modderkruiper",
                            Order = (byte)96
                        },
                        new
                        {
                            Id = new Guid("b4302d39-5657-5c64-63ac-91f7f1ba9d51"),
                            AnimalType = (byte)3,
                            IsByCatch = true,
                            Name = "riviergrondel",
                            Order = (byte)97
                        },
                        new
                        {
                            Id = new Guid("e31e1410-8cbf-0bbd-29b7-e2290f811c04"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "Amerikaanese rivierkreeft",
                            Order = (byte)98
                        },
                        new
                        {
                            Id = new Guid("856e5b58-14f3-6131-3eaa-976715f8a642"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "wolhandkrab",
                            Order = (byte)99
                        },
                        new
                        {
                            Id = new Guid("7bbef5b0-0a32-74f1-44ee-a2395dba74d8"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "roodwangschildpad",
                            Order = (byte)100
                        },
                        new
                        {
                            Id = new Guid("81a64eb4-335a-0d5f-a378-96c3cb5847d8"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "brulkikker",
                            Order = (byte)101
                        },
                        new
                        {
                            Id = new Guid("d913aacb-1e93-37b5-6e36-926d319e84b2"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "groene kikker",
                            Order = (byte)102
                        },
                        new
                        {
                            Id = new Guid("7fc8c7c6-8db1-8b20-a566-ed0c83ad94ba"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "gewone pad",
                            Order = (byte)103
                        },
                        new
                        {
                            Id = new Guid("78bc4319-368c-1324-8e8e-711e40210508"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "bruine kikker",
                            Order = (byte)104
                        },
                        new
                        {
                            Id = new Guid("7d2e51c9-36cb-4f2b-6859-d65cc3ee0124"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "zoetwatermossel",
                            Order = (byte)105
                        },
                        new
                        {
                            Id = new Guid("d0994e03-6d7f-9309-574d-687c36eb1499"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "inheemse rivierkreeft",
                            Order = (byte)106
                        },
                        new
                        {
                            Id = new Guid("2db0b44e-8ec5-41f2-befc-89fe1c05c17c"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "Turkse rivierkreeft",
                            Order = (byte)107
                        },
                        new
                        {
                            Id = new Guid("0042cfb2-1624-4af2-90dd-149d46f7c683"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "Europese rivierkreeft",
                            Order = (byte)108
                        },
                        new
                        {
                            Id = new Guid("c6e6943d-89aa-42e3-a096-f18911968095"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "Gestreepte Amerikaanse rivierkreeft",
                            Order = (byte)109
                        },
                        new
                        {
                            Id = new Guid("2497dea4-f0c8-40ba-94d6-13cc3dd60682"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "Rode Amerikaanse rivierkreeft",
                            Order = (byte)110
                        },
                        new
                        {
                            Id = new Guid("f6b62b18-7dc6-4548-8a0d-5151f2e41ec4"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "Californische rivierkreeft",
                            Order = (byte)111
                        },
                        new
                        {
                            Id = new Guid("67800503-61ce-48b1-bb9d-37d1943a545b"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "Gevlekte Amerikaanse rivierkreeft",
                            Order = (byte)112
                        },
                        new
                        {
                            Id = new Guid("76fa1418-960d-4f33-adfe-d2603d047348"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "Geknobbelde Amerikaanse rivierkreeft",
                            Order = (byte)113
                        },
                        new
                        {
                            Id = new Guid("7dc99bf1-251c-4bd0-a359-9a168f6a6af4"),
                            AnimalType = (byte)4,
                            IsByCatch = true,
                            Name = "Marmerkreeft",
                            Order = (byte)114
                        },
                        new
                        {
                            Id = new Guid("8957cb9d-936c-29cb-8511-a9c9a7ec6a7e"),
                            AnimalType = (byte)1,
                            IsByCatch = false,
                            Name = "Beverrat ram oud (>1jr)",
                            Order = (byte)245
                        },
                        new
                        {
                            Id = new Guid("2539b02a-9298-7b9f-4273-3e8ac99d7c63"),
                            AnimalType = (byte)1,
                            IsByCatch = false,
                            Name = "Beverrat ram jong (<1jr)",
                            Order = (byte)246
                        },
                        new
                        {
                            Id = new Guid("85803328-15e7-92ef-528f-00e91b6d4815"),
                            AnimalType = (byte)1,
                            IsByCatch = false,
                            Name = "Beverrat moer oud (>1jr)",
                            Order = (byte)247
                        },
                        new
                        {
                            Id = new Guid("7a8199e8-21df-7556-1f0a-549e94645b6f"),
                            AnimalType = (byte)1,
                            IsByCatch = false,
                            Name = "Beverrat moer jong (<1jr)",
                            Order = (byte)248
                        },
                        new
                        {
                            Id = new Guid("49b51935-918b-5a38-2493-a4141fef8c52"),
                            AnimalType = (byte)1,
                            IsByCatch = false,
                            Name = "Beverrat",
                            Order = (byte)249
                        },
                        new
                        {
                            Id = new Guid("3d1358f4-61d4-21d8-9438-90096eeea47e"),
                            AnimalType = (byte)1,
                            IsByCatch = false,
                            Name = "Muskusrat ram oud (>1jr)",
                            Order = (byte)250
                        },
                        new
                        {
                            Id = new Guid("e72ccb01-65bb-a1aa-a5e8-eb909fe77374"),
                            AnimalType = (byte)1,
                            IsByCatch = false,
                            Name = "Muskusrat ram jong (<1jr)",
                            Order = (byte)251
                        },
                        new
                        {
                            Id = new Guid("645f7089-7f21-50c5-30c4-5fe30cc693f1"),
                            AnimalType = (byte)1,
                            IsByCatch = false,
                            Name = "Muskusrat moer oud (>1jr)",
                            Order = (byte)252
                        },
                        new
                        {
                            Id = new Guid("44711e96-25b8-0af6-669b-ccdc8aba9017"),
                            AnimalType = (byte)1,
                            IsByCatch = false,
                            Name = "Muskusrat moer jong (<1jr)",
                            Order = (byte)253
                        },
                        new
                        {
                            Id = new Guid("c8783519-41c6-5654-1977-f6956aba2ef4"),
                            AnimalType = (byte)1,
                            IsByCatch = false,
                            Name = "Muskusrat",
                            Order = (byte)254
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.FieldTest.FieldTest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("FieldTest");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.FieldTest.FieldTestHourSquare", b =>
                {
                    b.Property<Guid>("FieldTestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HourSquareId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FieldTestId", "HourSquareId");

                    b.HasIndex("HourSquareId");

                    b.ToTable("FieldTestHourSquare");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Authorized")
                        .HasColumnType("bit");

                    b.Property<bool>("ConfidentialityConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<long?>("ExternalId")
                        .HasColumnType("bigint");

                    b.Property<string>("GivenName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("InactiveOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<Guid>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8207db25-94d1-4f3d-bf18-90da283221f7"),
                            Authorized = false,
                            ConfidentialityConfirmed = false,
                            CreatedById = new Guid("8207db25-94d1-4f3d-bf18-90da283221f7"),
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 5, 6, 14, 31, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "trap.system@enigmatry.com",
                            Name = "System",
                            UpdatedById = new Guid("8207db25-94d1-4f3d-bf18-90da283221f7"),
                            UpdatedOn = new DateTimeOffset(new DateTime(2019, 5, 6, 14, 31, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("16b691d5-da79-49ef-8f67-514b15754071"),
                            Authorized = true,
                            ConfidentialityConfirmed = false,
                            CreatedById = new Guid("16b691d5-da79-49ef-8f67-514b15754071"),
                            CreatedOn = new DateTimeOffset(new DateTime(2020, 3, 21, 17, 11, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "developer@enigmatry.com",
                            Name = "Developer",
                            UpdatedById = new Guid("16b691d5-da79-49ef-8f67-514b15754071"),
                            UpdatedOn = new DateTimeOffset(new DateTime(2020, 3, 21, 17, 11, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Observations.Observation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<DateTimeOffset>("RecordedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<Guid>("SubAreaHourSquareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("SubAreaHourSquareId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Observation");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.ReportData.OwnReportData", b =>
                {
                    b.Property<string>("CatchAreaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CatchTypeName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CatchingNights")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FieldTestName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("HourSquareName")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<double?>("Hours")
                        .HasColumnType("float");

                    b.Property<double?>("HoursPreviousYear")
                        .HasColumnType("float");

                    b.Property<bool?>("IsByCatch")
                        .HasColumnType("bit");

                    b.Property<int?>("NumberOfByCatches")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfByCatchesPreviousYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfCatches")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfCatchesPreviousYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfTraps")
                        .HasColumnType("int");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("Period")
                        .HasColumnType("int");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RayonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("RecordedOnYear")
                        .HasColumnType("int");

                    b.Property<string>("SubAreaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TrapStatus")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TrapTypeName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TrappingTypeName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("WaterAuthorityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int?>("Week")
                        .HasColumnType("int");

                    b.ToTable("OwnReportData","report");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.ReportTemplates.ReportTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExportFileName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("Exported")
                        .HasColumnType("bit");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RouteUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("ReportTemplate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("40a95cad-f942-4f99-a836-9c63cb47e4f8"),
                            Active = true,
                            Content = @"{
                        ""layer"": ""catch-registration-v3:TrackingLines""
                    }",
                            Exported = false,
                            Group = "Speurkaart",
                            RouteUri = "tracking-lines",
                            Title = "Alles",
                            Type = (byte)2
                        },
                        new
                        {
                            Id = new Guid("33b0648d-724b-4be9-8ed9-5ecea181a5de"),
                            Active = true,
                            Content = @"{
                        ""layer"": ""catch-registration-v3:OrganizationCatches"",
                        ""measurement"": 0,
                        ""yearFrom"": """",
                        ""periodFrom"": """",
                        ""yearTo"": """",
                        ""periodTo"": """",
                        ""trappingType"": """"
                    }",
                            Exported = false,
                            Group = "Vangsten en uren op kaart",
                            RouteUri = "catches-by-geo-region",
                            Title = "Vangsten en uren op kaart",
                            Type = (byte)2
                        },
                        new
                        {
                            Id = new Guid("a4337297-00d2-41ad-9da7-d58d6f073801"),
                            Active = true,
                            Content = @"{
                        ""startDate"": """",
                        ""endDate"": """",
                        ""catchType"": """",
                        ""organization"": """"
                    }",
                            Exported = false,
                            Group = "Heatmap",
                            RouteUri = "heat-map",
                            Title = "Heatmap",
                            Type = (byte)2
                        },
                        new
                        {
                            Id = new Guid("77f0ac51-3e70-4fec-9727-e68246525c22"),
                            Active = true,
                            Content = @"[
	                    {
		                    ""caption"": ""Organisatie"",
		                    ""dataField"": ""organizationName"",
		                    ""sortOrder"": ""asc"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Waterschap"",
		                    ""dataField"": ""waterAuthorityName"",
		                    ""sortOrder"": ""asc"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Rayon"",
		                    ""dataField"": ""rayonName"",
		                    ""sortOrder"": ""asc"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Vanggebied"",
		                    ""dataField"": ""catchAreaName"",
		                    ""sortOrder"": ""asc"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Deelgebied"",
		                    ""dataField"": ""subAreaName"",
		                    ""sortOrder"": ""asc"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Provincie"",
		                    ""dataField"": ""provinceName"",
		                    ""sortOrder"": ""asc"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Bestrijdingssoort"",
		                    ""dataField"": ""trappingTypeName"",
		                    ""sortOrder"": ""asc"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Vangmiddeltype"",
		                    ""dataField"": ""trapTypeName"",
		                    ""sortOrder"": ""asc"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Diersoort"",
		                    ""dataField"": ""catchTypeName"",
		                    ""sortOrder"": ""asc"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Vangstsoort"",
		                    ""dataField"": ""catchTypeCategoryName"",
		                    ""sortOrder"": ""asc"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Jaar"",
		                    ""dataField"": ""recordedOnYear"",
		                    ""dataType"": ""number"",
		                    ""sortOrder"": ""asc""
	                    },
	                    {
		                    ""caption"": ""Periode"",
		                    ""dataField"": ""period"",
		                    ""sortOrder"": ""asc"",
		                    ""dataType"": ""number"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Persoon"",
		                    ""dataField"": ""ownerName"",
		                    ""sortOrder"": ""asc"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Week"",
		                    ""dataField"": ""week"",
		                    ""sortOrder"": ""asc"",
		                    ""dataType"": ""number"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Uurhok"",
		                    ""dataField"": ""hourSquareName"",
		                    ""sortOrder"": ""asc"",
		                    ""width"": 120
	                    },
	                    {
		                    ""caption"": ""Vangsten"",
		                    ""dataField"": ""numberOfCatches"",
		                    ""dataType"": ""number"",
		                    ""summaryType"": ""sum"",
		                    ""area"": ""data""
	                    },
	                    {
		                    ""caption"": ""Bijvangsten"",
		                    ""dataField"": ""numberOfByCatches"",
		                    ""dataType"": ""number"",
		                    ""summaryType"": ""sum""
	                    },
	                    {
		                    ""caption"": ""Vangsten VJ"",
		                    ""dataField"": ""numberOfCatchesPreviousYear"",
		                    ""dataType"": ""number"",
		                    ""summaryType"": ""sum""
	                    },
	                    {
		                    ""caption"": ""Bijvangsten VJ"",
		                    ""dataField"": ""numberOfByCatchesPreviousYear"",
		                    ""dataType"": ""number"",
		                    ""summaryType"": ""sum""
	                    },
                        {
                            ""caption"": ""Vangsten / Bijvangsten"",
                            ""dxFunctionPlaceholder"": ""Divide:Vangsten,Bijvangsten"",
                            ""dataType"": ""number"",
                            ""format"": {
                                ""type"": ""largeNumber"",
                                ""precision"": 3
                            }
                        },
	                    {
		                    ""caption"": ""Aantal vallen"",
		                    ""dataField"": ""numberOfTraps"",
		                    ""dataType"": ""number"",
		                    ""summaryType"": ""sum""
	                    },
	                    {
		                    ""caption"": ""Uren"",
                            ""dataField"": ""hours"",
		                    ""summaryType"": ""sum"",
		                    ""sortOrder"": ""asc"",
		                    ""dataType"": ""number"",
                            ""format"": {
                                    ""type"": ""largeNumber"",
			                        ""precision"": 2
                            }
                        },
	                    {
		                    ""caption"": ""Uren VJ"",
                            ""dataField"": ""hoursPreviousYear"",
		                    ""summaryType"": ""sum"",
		                    ""sortOrder"": ""asc"",
		                    ""dataType"": ""number"",
                            ""format"": {
                                    ""type"": ""largeNumber"",
			                        ""precision"": 2
                            }
                        }
                    ]",
                            ExportFileName = "vangstrapportage",
                            Exported = false,
                            Group = "Vangstrapportage",
                            Key = "CatchId",
                            RouteUri = "own-report",
                            Title = "Eigen rapportage",
                            Type = (byte)1
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Roles.Permission", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("Order")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kaartoverzicht",
                            Order = (short)1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bekijken gegevens",
                            Order = (short)2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wijzigen gegevens",
                            Order = (short)3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Vangstrapportage",
                            Order = (short)4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Urenrapportage",
                            Order = (short)5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Urenrapportage beheer",
                            Order = (short)6
                        },
                        new
                        {
                            Id = 7,
                            Name = "Gebruikers",
                            Order = (short)7
                        },
                        new
                        {
                            Id = 8,
                            Name = "Beheer",
                            Order = (short)8
                        },
                        new
                        {
                            Id = 10,
                            Name = "Alleen lezen",
                            Order = (short)10
                        },
                        new
                        {
                            Id = 11,
                            Name = "Externe data interface (publiek)",
                            Order = (short)11
                        },
                        new
                        {
                            Id = 12,
                            Name = "Externe data interface",
                            Order = (short)12
                        },
                        new
                        {
                            Id = 100,
                            Name = "Mobiel",
                            Order = (short)100
                        },
                        new
                        {
                            Id = 9,
                            Name = "Beheerder Rechten Toekennen",
                            Order = (short)9
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Roles.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("DisplayOrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5add94f-982e-443d-bfa3-fb7efa3a7ec4"),
                            Description = "Trapper",
                            DisplayOrderIndex = 0,
                            Name = "Bestrijder"
                        },
                        new
                        {
                            Id = new Guid("7c0eb52a-fc78-4bee-a8a1-f62f3036c0ba"),
                            Description = "Senior user",
                            DisplayOrderIndex = 1,
                            Name = "Senior gebruiker"
                        },
                        new
                        {
                            Id = new Guid("da236317-eff5-44c4-b668-006ee2914309"),
                            Description = "Maintainer",
                            DisplayOrderIndex = 2,
                            Name = "Beheerder"
                        },
                        new
                        {
                            Id = new Guid("65f2e6f6-a12c-4a10-833d-909c184f8965"),
                            Description = "National reporter",
                            DisplayOrderIndex = 3,
                            Name = "Landelijke rapporteur"
                        },
                        new
                        {
                            Id = new Guid("fcf68091-04f0-4714-b889-b9230435feff"),
                            Description = "Regions application manager",
                            DisplayOrderIndex = 4,
                            Name = "Regionale functioneel beheerder"
                        },
                        new
                        {
                            Id = new Guid("7cedd2da-1429-4577-a9e9-e7ffa592e27e"),
                            Description = "National application manager",
                            DisplayOrderIndex = 5,
                            Name = "Landelijke functioneel beheerder"
                        },
                        new
                        {
                            Id = new Guid("8a54405f-1fd8-4ec4-88ae-840415b1af04"),
                            Description = "External public interface",
                            DisplayOrderIndex = 6,
                            Name = "Externe partij publiek"
                        },
                        new
                        {
                            Id = new Guid("c8e15955-47ce-430e-bdc0-733f43911ec1"),
                            Description = "External private interface",
                            DisplayOrderIndex = 7,
                            Name = "Externe partij private"
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Roles.RolePermission", b =>
                {
                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermission");

                    b.HasData(
                        new
                        {
                            PermissionId = 1,
                            RoleId = new Guid("c5add94f-982e-443d-bfa3-fb7efa3a7ec4")
                        },
                        new
                        {
                            PermissionId = 2,
                            RoleId = new Guid("c5add94f-982e-443d-bfa3-fb7efa3a7ec4")
                        },
                        new
                        {
                            PermissionId = 3,
                            RoleId = new Guid("c5add94f-982e-443d-bfa3-fb7efa3a7ec4")
                        },
                        new
                        {
                            PermissionId = 4,
                            RoleId = new Guid("c5add94f-982e-443d-bfa3-fb7efa3a7ec4")
                        },
                        new
                        {
                            PermissionId = 100,
                            RoleId = new Guid("c5add94f-982e-443d-bfa3-fb7efa3a7ec4")
                        },
                        new
                        {
                            PermissionId = 1,
                            RoleId = new Guid("7c0eb52a-fc78-4bee-a8a1-f62f3036c0ba")
                        },
                        new
                        {
                            PermissionId = 2,
                            RoleId = new Guid("7c0eb52a-fc78-4bee-a8a1-f62f3036c0ba")
                        },
                        new
                        {
                            PermissionId = 3,
                            RoleId = new Guid("7c0eb52a-fc78-4bee-a8a1-f62f3036c0ba")
                        },
                        new
                        {
                            PermissionId = 4,
                            RoleId = new Guid("7c0eb52a-fc78-4bee-a8a1-f62f3036c0ba")
                        },
                        new
                        {
                            PermissionId = 5,
                            RoleId = new Guid("7c0eb52a-fc78-4bee-a8a1-f62f3036c0ba")
                        },
                        new
                        {
                            PermissionId = 6,
                            RoleId = new Guid("7c0eb52a-fc78-4bee-a8a1-f62f3036c0ba")
                        },
                        new
                        {
                            PermissionId = 100,
                            RoleId = new Guid("7c0eb52a-fc78-4bee-a8a1-f62f3036c0ba")
                        },
                        new
                        {
                            PermissionId = 1,
                            RoleId = new Guid("da236317-eff5-44c4-b668-006ee2914309")
                        },
                        new
                        {
                            PermissionId = 2,
                            RoleId = new Guid("da236317-eff5-44c4-b668-006ee2914309")
                        },
                        new
                        {
                            PermissionId = 3,
                            RoleId = new Guid("da236317-eff5-44c4-b668-006ee2914309")
                        },
                        new
                        {
                            PermissionId = 4,
                            RoleId = new Guid("da236317-eff5-44c4-b668-006ee2914309")
                        },
                        new
                        {
                            PermissionId = 5,
                            RoleId = new Guid("da236317-eff5-44c4-b668-006ee2914309")
                        },
                        new
                        {
                            PermissionId = 7,
                            RoleId = new Guid("da236317-eff5-44c4-b668-006ee2914309")
                        },
                        new
                        {
                            PermissionId = 8,
                            RoleId = new Guid("da236317-eff5-44c4-b668-006ee2914309")
                        },
                        new
                        {
                            PermissionId = 100,
                            RoleId = new Guid("da236317-eff5-44c4-b668-006ee2914309")
                        },
                        new
                        {
                            PermissionId = 9,
                            RoleId = new Guid("da236317-eff5-44c4-b668-006ee2914309")
                        },
                        new
                        {
                            PermissionId = 1,
                            RoleId = new Guid("65f2e6f6-a12c-4a10-833d-909c184f8965")
                        },
                        new
                        {
                            PermissionId = 2,
                            RoleId = new Guid("65f2e6f6-a12c-4a10-833d-909c184f8965")
                        },
                        new
                        {
                            PermissionId = 4,
                            RoleId = new Guid("65f2e6f6-a12c-4a10-833d-909c184f8965")
                        },
                        new
                        {
                            PermissionId = 10,
                            RoleId = new Guid("65f2e6f6-a12c-4a10-833d-909c184f8965")
                        },
                        new
                        {
                            PermissionId = 1,
                            RoleId = new Guid("fcf68091-04f0-4714-b889-b9230435feff")
                        },
                        new
                        {
                            PermissionId = 2,
                            RoleId = new Guid("fcf68091-04f0-4714-b889-b9230435feff")
                        },
                        new
                        {
                            PermissionId = 3,
                            RoleId = new Guid("fcf68091-04f0-4714-b889-b9230435feff")
                        },
                        new
                        {
                            PermissionId = 4,
                            RoleId = new Guid("fcf68091-04f0-4714-b889-b9230435feff")
                        },
                        new
                        {
                            PermissionId = 7,
                            RoleId = new Guid("fcf68091-04f0-4714-b889-b9230435feff")
                        },
                        new
                        {
                            PermissionId = 1,
                            RoleId = new Guid("7cedd2da-1429-4577-a9e9-e7ffa592e27e")
                        },
                        new
                        {
                            PermissionId = 2,
                            RoleId = new Guid("7cedd2da-1429-4577-a9e9-e7ffa592e27e")
                        },
                        new
                        {
                            PermissionId = 4,
                            RoleId = new Guid("7cedd2da-1429-4577-a9e9-e7ffa592e27e")
                        },
                        new
                        {
                            PermissionId = 7,
                            RoleId = new Guid("7cedd2da-1429-4577-a9e9-e7ffa592e27e")
                        },
                        new
                        {
                            PermissionId = 8,
                            RoleId = new Guid("7cedd2da-1429-4577-a9e9-e7ffa592e27e")
                        },
                        new
                        {
                            PermissionId = 2,
                            RoleId = new Guid("8a54405f-1fd8-4ec4-88ae-840415b1af04")
                        },
                        new
                        {
                            PermissionId = 11,
                            RoleId = new Guid("8a54405f-1fd8-4ec4-88ae-840415b1af04")
                        },
                        new
                        {
                            PermissionId = 2,
                            RoleId = new Guid("c8e15955-47ce-430e-bdc0-733f43911ec1")
                        },
                        new
                        {
                            PermissionId = 11,
                            RoleId = new Guid("c8e15955-47ce-430e-bdc0-733f43911ec1")
                        },
                        new
                        {
                            PermissionId = 12,
                            RoleId = new Guid("c8e15955-47ce-430e-bdc0-733f43911ec1")
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Roles.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("16b691d5-da79-49ef-8f67-514b15754071"),
                            RoleId = new Guid("da236317-eff5-44c4-b668-006ee2914309")
                        },
                        new
                        {
                            UserId = new Guid("8207db25-94d1-4f3d-bf18-90da283221f7"),
                            RoleId = new Guid("da236317-eff5-44c4-b668-006ee2914309")
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.TimeRegistrations.TimeRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("8207db25-94d1-4f3d-bf18-90da283221f7"));

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<double>("Hours")
                        .HasColumnType("float");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("SubAreaHourSquareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrappingTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("8207db25-94d1-4f3d-bf18-90da283221f7"));

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Date")
                        .HasName("IX_Date");

                    b.HasIndex("SubAreaHourSquareId");

                    b.HasIndex("TrappingTypeId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("UserId");

                    b.ToTable("TimeRegistration");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Trackings.Tracking", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsTimewriting")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrackingMap")
                        .HasColumnType("bit");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<DateTimeOffset>("RecordedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrappingTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("isTrackingPrivate")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("TrappingTypeId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Tracking");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Trackings.TrackingLine", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<MultiLineString>("Polyline")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TrackingLine");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Traps.Trap", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CatchingNights")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<int>("NumberOfTraps")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("RecordedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset?>("RemovedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("SubAreaHourSquareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrapTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("SubAreaHourSquareId");

                    b.HasIndex("TrapTypeId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Trap");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Traps.TrapHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset>("RecordedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("TrapId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CatchId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("TrapId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("TrapHistory");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Traps.TrapType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("Order")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("TrappingTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TrappingTypeId");

                    b.ToTable("TrapType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0a0503e-0cd7-0642-73ab-464e7ca0a28e"),
                            Active = true,
                            Name = "Conibear",
                            Order = (byte)1,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("264f0093-6056-110b-1de8-2aefd1d73c4a"),
                            Active = true,
                            Name = "Postklem",
                            Order = (byte)2,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("9f91a9d1-77d9-06d9-03a9-18f2efcc0bcc"),
                            Active = true,
                            Name = "Duikerafzetting",
                            Order = (byte)3,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("6539abe5-081d-a060-31b9-1c5c43f74abb"),
                            Active = true,
                            Name = "Lokaaskooi",
                            Order = (byte)4,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("3c881890-4d00-6b96-25be-67dec7314b2f"),
                            Active = true,
                            Name = "Slootafzetting met kooi",
                            Order = (byte)5,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("dc90faa1-1ad8-a4f2-22c2-582dcc5d4a84"),
                            Active = true,
                            Name = "Levend vangende kooi",
                            Order = (byte)6,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("e887e560-8959-8994-960b-a85fc5c22e4d"),
                            Active = false,
                            Name = "Levend vangende kooi op vlot",
                            Order = (byte)7,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("47890978-910d-969a-2499-0b848fa80f8a"),
                            Active = false,
                            Name = "Levend vangende kooi op oever",
                            Order = (byte)8,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("10d026ed-0d1e-7b3b-786c-0246c0367222"),
                            Active = false,
                            Name = "Levend vangende kooi op wissel",
                            Order = (byte)9,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("1620509f-4bb2-90ea-637c-af77b636964a"),
                            Active = true,
                            Name = "Grondklem",
                            Order = (byte)10,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("935a02f4-69b0-8142-29f8-885124db34bc"),
                            Active = true,
                            Name = "Slaan en delven",
                            Order = (byte)11,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("2ff5402a-96b5-6b49-3eed-e5a4372666fb"),
                            Active = true,
                            Name = "Klemmenrekje",
                            Order = (byte)12,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("eb992687-4000-6956-a688-2fc9242d2e20"),
                            Active = true,
                            Name = "Lokaasklem",
                            Order = (byte)13,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("eb9f0577-a55e-0ed7-2102-f04cefe54680"),
                            Active = false,
                            Name = "Lokaasklem (oever)",
                            Order = (byte)14,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("c3c795b9-49d2-0722-7f4b-e28bf43da5c4"),
                            Active = true,
                            Name = "Geweer",
                            Order = (byte)15,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("e2ba4c87-65fd-2f70-a1ea-68a6a4549db6"),
                            Active = true,
                            Name = "Schijnduiker",
                            Order = (byte)16,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("2fed9c2e-7151-316f-5e5d-644bc5620172"),
                            Active = true,
                            Name = "Dood aangetroffen",
                            Order = (byte)17,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("198be8a5-569f-233c-93ef-3879aa97120c"),
                            Active = false,
                            Name = "Duikerkooi (groot/klein)",
                            Order = (byte)18,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("ff7c880c-9ac6-433e-1b92-3563869a48e2"),
                            Active = false,
                            Name = "Otter",
                            Order = (byte)19,
                            TrappingTypeId = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb")
                        },
                        new
                        {
                            Id = new Guid("0d39267f-2ef1-5978-4fb5-68b7ec956f0f"),
                            Active = false,
                            Name = "Levend vangende kooi op vlot",
                            Order = (byte)20,
                            TrappingTypeId = new Guid("76b4e3e7-ce9d-4eed-ab39-0ba2c6395b2b")
                        },
                        new
                        {
                            Id = new Guid("dc56c661-710f-63ab-870b-36ede6f9204e"),
                            Active = false,
                            Name = "Levend vangende kooi op oever",
                            Order = (byte)21,
                            TrappingTypeId = new Guid("76b4e3e7-ce9d-4eed-ab39-0ba2c6395b2b")
                        },
                        new
                        {
                            Id = new Guid("b73b56e0-9691-6eff-43c5-0f0f36ff69c2"),
                            Active = false,
                            Name = "Levend vangende kooi op wissel",
                            Order = (byte)22,
                            TrappingTypeId = new Guid("76b4e3e7-ce9d-4eed-ab39-0ba2c6395b2b")
                        },
                        new
                        {
                            Id = new Guid("222b0a31-092a-4978-71df-1f5c55e41000"),
                            Active = true,
                            Name = "Levend vangende kooi",
                            Order = (byte)23,
                            TrappingTypeId = new Guid("76b4e3e7-ce9d-4eed-ab39-0ba2c6395b2b")
                        },
                        new
                        {
                            Id = new Guid("13eb51ac-6984-95e9-04ee-ddae1927a499"),
                            Active = true,
                            Name = "Geweer",
                            Order = (byte)24,
                            TrappingTypeId = new Guid("76b4e3e7-ce9d-4eed-ab39-0ba2c6395b2b")
                        },
                        new
                        {
                            Id = new Guid("5fa2dc7f-8c1a-1255-a41e-6bf28b183def"),
                            Active = true,
                            Name = "Slaan en delven",
                            Order = (byte)25,
                            TrappingTypeId = new Guid("76b4e3e7-ce9d-4eed-ab39-0ba2c6395b2b")
                        },
                        new
                        {
                            Id = new Guid("ca6c4838-2b63-71c5-3bec-6dbefe7678a2"),
                            Active = true,
                            Name = "Dood aangetroffen",
                            Order = (byte)26,
                            TrappingTypeId = new Guid("76b4e3e7-ce9d-4eed-ab39-0ba2c6395b2b")
                        },
                        new
                        {
                            Id = new Guid("586729d8-980e-2a76-81f2-dbb5c57c9d6f"),
                            Active = false,
                            Name = "Conibear",
                            Order = (byte)27,
                            TrappingTypeId = new Guid("76b4e3e7-ce9d-4eed-ab39-0ba2c6395b2b")
                        },
                        new
                        {
                            Id = new Guid("54af411e-25f6-2a11-4bbf-e7547e212e76"),
                            Active = false,
                            Name = "Grondklem",
                            Order = (byte)28,
                            TrappingTypeId = new Guid("76b4e3e7-ce9d-4eed-ab39-0ba2c6395b2b")
                        },
                        new
                        {
                            Id = new Guid("3b1215f3-05a2-660e-85f4-d27dd5ae115d"),
                            Active = false,
                            Name = "Overig",
                            Order = (byte)29,
                            TrappingTypeId = new Guid("76b4e3e7-ce9d-4eed-ab39-0ba2c6395b2b")
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Traps.TrapTypeTrapStatusStyle", b =>
                {
                    b.Property<Guid>("TrapTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("TrapStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("TrapTypeId", "TrapStatus");

                    b.ToTable("TrapTypeTrapStatusStyle");

                    b.HasData(
                        new
                        {
                            TrapTypeId = new Guid("a0a0503e-0cd7-0642-73ab-464e7ca0a28e"),
                            TrapStatus = (byte)1,
                            IconName = "trap-conibear.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("a0a0503e-0cd7-0642-73ab-464e7ca0a28e"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-conibear.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("264f0093-6056-110b-1de8-2aefd1d73c4a"),
                            TrapStatus = (byte)1,
                            IconName = "trap-postklem.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("264f0093-6056-110b-1de8-2aefd1d73c4a"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-postklem.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("9f91a9d1-77d9-06d9-03a9-18f2efcc0bcc"),
                            TrapStatus = (byte)1,
                            IconName = "trap-duikerafzetting.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("9f91a9d1-77d9-06d9-03a9-18f2efcc0bcc"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-duikerafzetting.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("9f91a9d1-77d9-06d9-03a9-18f2efcc0bcc"),
                            TrapStatus = (byte)2,
                            IconName = "trap-unplaced-duikerafzetting.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("6539abe5-081d-a060-31b9-1c5c43f74abb"),
                            TrapStatus = (byte)1,
                            IconName = "trap-lokaaskooi.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("6539abe5-081d-a060-31b9-1c5c43f74abb"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-lokaaskooi.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("3c881890-4d00-6b96-25be-67dec7314b2f"),
                            TrapStatus = (byte)1,
                            IconName = "trap-slootafzetting.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("3c881890-4d00-6b96-25be-67dec7314b2f"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-slootafzetting.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("3c881890-4d00-6b96-25be-67dec7314b2f"),
                            TrapStatus = (byte)2,
                            IconName = "trap-unplaced-slootafzetting.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("dc90faa1-1ad8-a4f2-22c2-582dcc5d4a84"),
                            TrapStatus = (byte)1,
                            IconName = "trap-musk-living.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("dc90faa1-1ad8-a4f2-22c2-582dcc5d4a84"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-musk-living.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("1620509f-4bb2-90ea-637c-af77b636964a"),
                            TrapStatus = (byte)1,
                            IconName = "trap-grondklem.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("1620509f-4bb2-90ea-637c-af77b636964a"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-grondklem.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("935a02f4-69b0-8142-29f8-885124db34bc"),
                            TrapStatus = (byte)1,
                            IconName = "trap-musk-other.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("935a02f4-69b0-8142-29f8-885124db34bc"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-musk-other.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("2ff5402a-96b5-6b49-3eed-e5a4372666fb"),
                            TrapStatus = (byte)1,
                            IconName = "trap-klemmenrek.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("2ff5402a-96b5-6b49-3eed-e5a4372666fb"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-klemmenrek.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("2ff5402a-96b5-6b49-3eed-e5a4372666fb"),
                            TrapStatus = (byte)2,
                            IconName = "trap-unplaced-klemmenrek.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("eb992687-4000-6956-a688-2fc9242d2e20"),
                            TrapStatus = (byte)1,
                            IconName = "trap-lokaasklem.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("eb992687-4000-6956-a688-2fc9242d2e20"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-lokaasklem.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("c3c795b9-49d2-0722-7f4b-e28bf43da5c4"),
                            TrapStatus = (byte)1,
                            IconName = "trap-musk-other.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("c3c795b9-49d2-0722-7f4b-e28bf43da5c4"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-musk-other.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("e2ba4c87-65fd-2f70-a1ea-68a6a4549db6"),
                            TrapStatus = (byte)1,
                            IconName = "trap-schijnduiker.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("e2ba4c87-65fd-2f70-a1ea-68a6a4549db6"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-schijnduiker.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("e2ba4c87-65fd-2f70-a1ea-68a6a4549db6"),
                            TrapStatus = (byte)2,
                            IconName = "trap-unplaced-schijnduiker.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("2fed9c2e-7151-316f-5e5d-644bc5620172"),
                            TrapStatus = (byte)1,
                            IconName = "trap-musk-other.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("2fed9c2e-7151-316f-5e5d-644bc5620172"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-musk-other.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("222b0a31-092a-4978-71df-1f5c55e41000"),
                            TrapStatus = (byte)1,
                            IconName = "trap-beaver-living.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("222b0a31-092a-4978-71df-1f5c55e41000"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-beaver-living.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("13eb51ac-6984-95e9-04ee-ddae1927a499"),
                            TrapStatus = (byte)1,
                            IconName = "trap-beaver-other.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("13eb51ac-6984-95e9-04ee-ddae1927a499"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-beaver-other.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("5fa2dc7f-8c1a-1255-a41e-6bf28b183def"),
                            TrapStatus = (byte)1,
                            IconName = "trap-beaver-other.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("5fa2dc7f-8c1a-1255-a41e-6bf28b183def"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-beaver-other.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("ca6c4838-2b63-71c5-3bec-6dbefe7678a2"),
                            TrapStatus = (byte)1,
                            IconName = "trap-beaver-other.svg"
                        },
                        new
                        {
                            TrapTypeId = new Guid("ca6c4838-2b63-71c5-3bec-6dbefe7678a2"),
                            TrapStatus = (byte)3,
                            IconName = "trap-removed-beaver-other.svg"
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Traps.TrappingType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TrappingType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a2ba2913-77d6-47d9-b893-f9d0cc0432bb"),
                            Name = "Muskusrat"
                        },
                        new
                        {
                            Id = new Guid("76b4e3e7-ce9d-4eed-ab39-0ba2c6395b2b"),
                            Name = "Beverrat"
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.UserSessions.SessionAccessToken", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Expired")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserSessionId");

                    b.ToTable("SessionAccessToken");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.UserSessions.UserSession", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ExpiresOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Origin")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("UserSession");
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.CatchArea", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.Rayon", "Rayon")
                        .WithMany("CatchAreas")
                        .HasForeignKey("RayonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.HourSquare", b =>
                {
                    b.OwnsOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.PredictionModel", "PredictionModel", b1 =>
                        {
                            b1.Property<Guid>("HourSquareId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("CpeAB")
                                .HasColumnName("CpeAB")
                                .HasColumnType("float");

                            b1.Property<double>("CpeRecent")
                                .HasColumnName("CpeRecent")
                                .HasColumnType("float");

                            b1.Property<bool>("PopulationPresent")
                                .HasColumnName("PopulationPresent")
                                .HasColumnType("bit");

                            b1.Property<double?>("R2")
                                .HasColumnName("R2")
                                .HasColumnType("float");

                            b1.HasKey("HourSquareId");

                            b1.ToTable("HourSquare");

                            b1.WithOwner()
                                .HasForeignKey("HourSquareId");
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.Rayon", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.Organization", "Organization")
                        .WithMany("Rayons")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.SubArea", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.CatchArea", "CatchArea")
                        .WithMany("SubAreas")
                        .HasForeignKey("CatchAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.WaterAuthority", "WaterAuthority")
                        .WithMany("SubAreas")
                        .HasForeignKey("WaterAuthorityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.SubAreaHourSquare", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.HourSquare", "HourSquare")
                        .WithMany("SubAreaHourSquares")
                        .HasForeignKey("HourSquareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.SubArea", "SubArea")
                        .WithMany("SubAreaHourSquares")
                        .HasForeignKey("SubAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Areas.WaterAuthority", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.Organization", "Organization")
                        .WithMany("WaterAuthorities")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Catches.Catch", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Catches.CatchType", "CatchType")
                        .WithMany()
                        .HasForeignKey("CatchTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "CreatedBy")
                        .WithMany("CreatedCatches")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Traps.Trap", "Trap")
                        .WithMany("Catches")
                        .HasForeignKey("TrapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "UpdatedBy")
                        .WithMany("UpdatedCatches")
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("Waterschapshuis.CatchRegistration.DomainModel.YearWeekPeriod", "WeekPeriod", b1 =>
                        {
                            b1.Property<Guid>("CatchId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Period")
                                .HasColumnName("Period")
                                .HasColumnType("int")
                                .HasDefaultValueSql("1");

                            b1.Property<int>("Week")
                                .HasColumnName("Week")
                                .HasColumnType("int")
                                .HasDefaultValueSql("1");

                            b1.Property<int>("Year")
                                .HasColumnName("Year")
                                .HasColumnType("int")
                                .HasDefaultValueSql("2020");

                            b1.HasKey("CatchId");

                            b1.ToTable("Catch");

                            b1.WithOwner()
                                .HasForeignKey("CatchId");
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.FieldTest.FieldTest", b =>
                {
                    b.OwnsOne("Waterschapshuis.CatchRegistration.DomainModel.YearPeriod", "EndPeriod", b1 =>
                        {
                            b1.Property<Guid>("FieldTestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Period")
                                .HasColumnName("EndPeriod")
                                .HasColumnType("int")
                                .HasDefaultValueSql("1");

                            b1.Property<int>("Year")
                                .HasColumnName("EndYear")
                                .HasColumnType("int")
                                .HasDefaultValueSql("2020");

                            b1.HasKey("FieldTestId");

                            b1.ToTable("FieldTest");

                            b1.WithOwner()
                                .HasForeignKey("FieldTestId");
                        });

                    b.OwnsOne("Waterschapshuis.CatchRegistration.DomainModel.YearPeriod", "StartPeriod", b1 =>
                        {
                            b1.Property<Guid>("FieldTestId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Period")
                                .HasColumnName("StartPeriod")
                                .HasColumnType("int")
                                .HasDefaultValueSql("1");

                            b1.Property<int>("Year")
                                .HasColumnName("StartYear")
                                .HasColumnType("int")
                                .HasDefaultValueSql("2020");

                            b1.HasKey("FieldTestId");

                            b1.ToTable("FieldTest");

                            b1.WithOwner()
                                .HasForeignKey("FieldTestId");
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.FieldTest.FieldTestHourSquare", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.FieldTest.FieldTest", "FieldTest")
                        .WithMany("FieldTestHourSquares")
                        .HasForeignKey("FieldTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.HourSquare", "HourSquare")
                        .WithMany("FieldTestHourSquare")
                        .HasForeignKey("HourSquareId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "CreatedBy")
                        .WithMany("CreatedUsers")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.Organization", "Organization")
                        .WithMany("Users")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "UpdatedBy")
                        .WithMany("UpdatedUsers")
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Observations.Observation", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "CreatedBy")
                        .WithMany("CreatedObservations")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.SubAreaHourSquare", "SubAreaHourSquare")
                        .WithMany("Observations")
                        .HasForeignKey("SubAreaHourSquareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "UpdatedBy")
                        .WithMany("UpdatedObservations")
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Roles.RolePermission", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Roles.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Roles.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Roles.UserRole", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Roles.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.TimeRegistrations.TimeRegistration", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "CreatedBy")
                        .WithMany("CreatedTimeRegistrations")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.SubAreaHourSquare", "SubAreaHourSquare")
                        .WithMany("TimeRegistrations")
                        .HasForeignKey("SubAreaHourSquareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Traps.TrappingType", "TrappingType")
                        .WithMany()
                        .HasForeignKey("TrappingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "UpdatedBy")
                        .WithMany("UpdatedTimeRegistrations")
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "User")
                        .WithMany("TimeRegistrations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Waterschapshuis.CatchRegistration.DomainModel.YearWeekPeriod", "WeekPeriod", b1 =>
                        {
                            b1.Property<Guid>("TimeRegistrationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Period")
                                .HasColumnName("Period")
                                .HasColumnType("int")
                                .HasDefaultValueSql("1");

                            b1.Property<int>("Week")
                                .HasColumnName("Week")
                                .HasColumnType("int")
                                .HasDefaultValueSql("1");

                            b1.Property<int>("Year")
                                .HasColumnName("Year")
                                .HasColumnType("int")
                                .HasDefaultValueSql("2020");

                            b1.HasKey("TimeRegistrationId");

                            b1.ToTable("TimeRegistration");

                            b1.WithOwner()
                                .HasForeignKey("TimeRegistrationId");
                        });
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Trackings.Tracking", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "CreatedBy")
                        .WithMany("CreatedTrackings")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Traps.TrappingType", "TrappingType")
                        .WithMany()
                        .HasForeignKey("TrappingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "UpdatedBy")
                        .WithMany("UpdatedTrackings")
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Traps.Trap", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "CreatedBy")
                        .WithMany("CreatedTraps")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.Province", "Province")
                        .WithMany("Traps")
                        .HasForeignKey("ProvinceId");

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Areas.SubAreaHourSquare", "SubAreaHourSquare")
                        .WithMany("Traps")
                        .HasForeignKey("SubAreaHourSquareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Traps.TrapType", "TrapType")
                        .WithMany()
                        .HasForeignKey("TrapTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "UpdatedBy")
                        .WithMany("UpdatedTraps")
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Traps.TrapHistory", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Catches.Catch", "Catch")
                        .WithMany("TrapHistories")
                        .HasForeignKey("CatchId");

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "CreatedBy")
                        .WithMany("CreatedTrapHistories")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Traps.Trap", "Trap")
                        .WithMany("TrapHistories")
                        .HasForeignKey("TrapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "UpdatedBy")
                        .WithMany("UpdatedTrapHistories")
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Traps.TrapType", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Traps.TrappingType", "TrappingType")
                        .WithMany()
                        .HasForeignKey("TrappingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.Traps.TrapTypeTrapStatusStyle", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Traps.TrapType", "TrapType")
                        .WithMany("TrapTypeTrapStatusStyles")
                        .HasForeignKey("TrapTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.UserSessions.SessionAccessToken", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.UserSessions.UserSession", "UserSession")
                        .WithMany("AccessTokens")
                        .HasForeignKey("UserSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Waterschapshuis.CatchRegistration.DomainModel.UserSessions.UserSession", b =>
                {
                    b.HasOne("Waterschapshuis.CatchRegistration.DomainModel.Identity.User", "CreatedBy")
                        .WithMany("UserSessions")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
